{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "imgSKU": {
      "type": "string",
      "defaultValue": "14.04.0-LTS",
      "allowedValues": [
        "16.04.0-LTS",
        "14.04.0-LTS"
      ],
      "metadata": {
        "description": "Ubuntu OS Vesrsion"
      }
    },
    "vmSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_DS1_V2",
      "allowedValues": [
        "Basic_A0",
        "Basic_A1",
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_DS1_V2"
      ],
      "metadata": {
        "description": "Size of the virtual machine, must be available in the virtual machine's location"
      }
    },
    "numberOfInstances": {
      "type": "int",
      "minValue": 1,
      "defaultValue": 1,
      "maxValue": 10,
      "metadata": {
        "description": "Number of VM instances to be created behind internal load balancer control"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "String to prefix the generation of the VM Name"
      }
    },
    "vmPriority": {
      "type": "string",
      "defaultValue": "9",
      "metadata": {
        "description": "Parameter for the VM Priority Tag"
      }
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "virtualNetworkResourceGroup": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "fileUris": {
      "type": "array",
      "defaultValue": [
        "https://raw.githubusercontent.com/lorax79/legacy/master/nat-iptables.sh"
      ]
    },
    "commandToExecute": {
      "type": "securestring"
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Public IP for the NAT VM"
      }
    },
    "publicIpAddressType": {
      "type": "string",
      "defaultvalue": "Dynamic",
      "allowedvalues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Static or Dynamic Public IP Address"
      }
    },
    "networkSecurityGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the NSG for the NAT subnet"
      }
    }
  },
  "variables": {
    "vmNamePrefix": "[parameters('vmNamePrefix')]",
    "imagePublisher": "Cononical",
    "imageOffer": "UbuntuServer",
    "vhdStorageName": "[parameters('storageAccountName')]",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "vnetId": "[resourceid(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "virtualNetworkSubnetName": "[parameters('subnetName')]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('virtualNetworkSubnetName'))]",
    "networkInterfaceNamePrefix": "VNic",
    "VMPriority": "[parameters('vmPriority')]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('vmNamePrefix'), variables('networkInterfaceNamePrefix'), copyindex())]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('vmNamePrefix'), 'ipconfig', copyindex())]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmNamePrefix'), copyindex())]",
      "copy": {
        "count": "[parameters('numberOfInstances')]",
        "name": "virtualMachineLoop"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachines",
        "priority": "[variables('VMPriority')]"
      },
      "dependsOn": [
        "nicLoop"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imgSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/vhds/', variables('vmNamePrefix'), copyIndex(), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmNamePrefix'), variables('networkInterfaceNamePrefix'), copyindex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "resources": [
        {
          "name": "[concat(variables('vmNamePrefix'), copyindex(),'/CustomScriptForLinux')]",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "properties": {
            "publisher": "Microsoft.OSTCExtensions",
            "type": "CustomScriptForLinux",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": "[parameters('fileUris')]"
            },
            "protectedSettings": {
              "commandToExecute": "[parameters('commandToExecute')]"
            }
          }
        }
      ]
    },
    {
      "name": "[parameters('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2016-03-30",
      "location": "[resourcegroup().location]",
      "properties": {
        "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
      }
    },
      {
        "name": "[parameters('networkSecurityGroupName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-all",
              "properties": {
                "priority": 1000,
                "sourceAddressPrefix": "*",
                "protocol": "*",
                "destinationPortRange": "*",
                "access": "Allow",
                "direction": "Inbound",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      }
      ]
    }
